# optional over-ride on minification (put in your local build.properties): minify.js = false
minify.js = true

# in cruisecontrol, this is substituted
# by the SVN revision or CC build number
build.number               = local-dev
build.branch               = local-dev
git.revision               = local-dev
git.common.revision        = local-dev
rpm.version                = dev

app.dir = .
# externals
tomcat.dir          = ${app.dir}/../tomcat
tomcat.webapp.dir   = ${tomcat.dir}/webapps
tomcat.config.dir   = ${tomcat.dir}/conf
tomcat.java.opts = -Dcommon.env.config.dir=${common.dir}/config -Doib.env.config.dir=${common.dir}/../threetwelve/config -Doutcomes.env.config.dir=${common.dir}/../outcomes/config -Doa.env.config.dir=${common.dir}/../assess/config -Dorg.owasp.esapi.resources=${common.dir}/src/main/resources/.esapi -Djavax.net.ssl.trustStore=/opt/wgen/etc/pki/cacerts -Xms128m -Xmx2048m -XX:MaxPermSize=256m -XX:-UseGCOverheadLimit

# paths
lib.dir             = ${common.dir}/lib
coverage.lib.dir    = ${lib.dir}/coverage
build.lib.dir       = ${lib.dir}/build
common.src.dir      = ${common.dir}/src/main/java
app.src.dir         = ${app.dir}/src/main/java

common.web.dir      = ${common.dir}/src/main/webapp
app.web.dir         = ${app.dir}/src/main/webapp

common.resources.dir    = ${common.dir}/src/main/resources
app.resources.dir       = ${app.dir}/src/main/resources

common.config.dir.property      = common.env.config.dir
app.config.dir.property         = ${servlet.name}.env.config.dir
common.config.dir        = ${common.dir}/config
app.config.dir           = ${app.dir}/config

server.config.dir   = ${app.dir}/../tomcat


app.static.dir          = ${app.web.dir}/static
common.static.dir       = ${common.web.dir}/static/common


app.freemarker.dir = ${app.web.dir}/WEB-INF/freemarker
common.freemarker.dir = ${common.web.dir}/WEB-INF/freemarker/common

output.dir = ${app.dir}/target

# for oib deployment
deploy.root.dir     = ${output.dir}/${servlet.name}
deploy.classes.dir  = ${deploy.root.dir}/WEB-INF/classes/${servlet.name}
deploy.common.classes.dir = ${deploy.root.dir}/WEB-INF/classes/common
deploy.resources.dir = ${deploy.root.dir}/WEB-INF/classes
deploy.lib.dir       = ${deploy.root.dir}/WEB-INF/lib
deploy.static.dir    = ${tomcat.webapp.dir}/${static.name}
deploy.static.common.dir = ${deploy.static.dir}/common
deploy.static.backup.dir = ${tomcat.webapp.dir}/${static.name}_backup
deploy.scripts.dir    = ${deploy.root.dir}/../scripts


# for packaging
war.outdir          = ${output.dir}
war.exploded.dir =${tomcat.webapp.dir}/${servlet.name}
war.servlet.name = ${servlet.name}.war

jar.outdir = ${output.dir}/jar
jar.classes.dir.main = ${output.dir}/jar/${servlet.name}/classes
jar.classes.dir.common = ${output.dir}/jar/common/classes

jar.common.app.name = tt-common
jar.common.web.name = tt-common-web

fixture.export.dir = ${app.dir}/../outcomes/src/main/resources/fixtures
napi.fixture.export.dir = ${common.resources.dir}/demo

ivy.resolution.cache.dir=${basedir}/.ivy2/cache/resolution

# build settings
build.deprecation   = on
build.optimization  = off
build.compiler      = modern
build.executable    = javac
build.source        = 1.6
build.target        = 1.6
build.no-warnings   = true

# for hot deploy
war.exploded.freemarker.dir = ${war.exploded.dir}/WEB-INF/freemarker
war.exploded.freemarker.common.dir = ${war.exploded.freemarker.dir}/common

grinder.src.dir = ${common.dir}/src/test/grinder
grinder.classes.dir = ${output.dir}/grinder
