<?xml version="1.0"?>
<project name="jsdriver">

    <property file="${imported.basedir}/default.jsdriver.properties" />

    <taskdef classpath="${build.lib.dir}/checkstyle-all-${external-dependencies.checkstyle.revision}.jar"
             resource="checkstyletask.properties"
    />

    <!-- This target unpackages the javascript test dependencies into the required locations -->
    <!-- Dependencies provided by the java-junit-jsdriver project -->
    <target name="unzip-js-unittest">

        <delete dir="${js-test.dir}" includeemptydirs="true" failonerror="false" />
        <mkdir dir="${js-test.dir}" />
        <mkdir dir="${js-test.dir}/java" />
        <unzip dest="${js-test.dir}">
            <fileset dir="${test.lib.dir}">
                <include name="${js-test.dependency}-web-assets*.zip"/>
            </fileset>
        </unzip>
        
        <copy todir="${js-test.dir}">
            <fileset dir="${js-test.dir}/${js-test.dependency}-web-assets/web">
                <exclude name="**/dnext" />
                <exclude name="**/WEB-INF" />
                <exclude name="**/${js-test.dependency}-web-assets-commit-hash*" />
            </fileset>
        </copy>
        
        <copy todir="${js-unittests.dir}/..">
            <fileset dir="${js-test.dir}/${js-test.dependency}-web-assets/web">
                <exclude name="**/dnext/**" />
                <exclude name="**/WEB-INF/**" />
                <exclude name="**/java/**" />
                <exclude name="**/${js-test.dependency}-web-assets-commit-hash*" />
            </fileset>
        </copy>
        
    	<copy todir="${js-test.java.test.dir}">
            <fileset dir="${js-test.dir}/${js-test.dependency}-web-assets/web">
                <exclude name="**/dnext/**" />
                <exclude name="**/WEB-INF/**" />
            	<exclude name="**/qunit/**" />
            	<exclude name="**/util/**" />
                <exclude name="**/${js-test.dependency}-web-assets-commit-hash*" />
            </fileset>
        </copy>
    	
        <!-- <copy todir="${js-unittests.dir}/..">
            <dirset dir="${js-test.dir}/${js-test.dependency}-web-assets/web" includes="qunit util"/>
        </copy> -->
        <delete dir="${js-test.dir}/${js-test.dependency}-web-assets" includeemptydirs="true" failonerror="true" />
    </target>
    
    <path id="jstest.classpath.compile-base">
    	<fileset dir="${lib.dir}/${js-test.dir}" includes="**/*.jar" />
        <pathelement location="${js-test.dir}/java" />
        <pathelement location="${app.resources.dir}" />
    </path>
    
    <!-- Compile junit test classes -->
	<!--
    <target name="jstest-compile" depends="-cobertura-setup, build-app-jars, unzip-web-assets, cobertura-instrument-jars, -copy-spring-contexts"
        description="Compile the javascript tests">

        <path id="test.classpath.compile">
            <path refid="jstest.classpath.compile-base" />            
        </path>

        <sequential>
            <javac 
                srcdir="${app.unit.src.dir}"
                destdir="${unit.test.classes.dir}"
            	includes="**/scripttester/*.java"
                excludes="${test.src.exclude}"
                classpathref="jstest.classpath.compile-base"
                deprecation="${build.deprecation}"
                debug="on"
                optimize="${build.optimization}"
                compiler="${build.compiler}"
                source="${build.source}"
                target="${build.target}"
                encoding="UTF-8"
                includeantruntime="no"
            >
            </javac>
        </sequential>
    </target>
	
	-->
	<path id="jstest.classpath.run-base">
		<path refid="jstest.classpath.compile-base" />
        <pathelement location="${unit.test.classes.dir}" />
    </path>
	
    <!-- This target runs the javascript tests at the targetted location or on the class path -->
    <target name="unittest-javascript" depends="unzip-js-unittest, test-compile">
        
    	<junit printsummary="withOutAndErr" 
               fork="yes" 
               timeout="300000" 
               haltonfailure="false"
               haltonerror="false" 
               dir="." 
               failureproperty="junit.failed" 
               errorproperty="junit.failed" 
               showoutput="on">

            <jvmarg value="-D${js-test.path.property}=${js-unittests.dir}" />
            <classpath refid="jstest.classpath.run-base" />
            <formatter type="xml" />
            <formatter type="plain" />
            <batchtest fork="yes" todir="js-test">
                <fileset dir="${js-test.dir}" 
                         includes="**/*.java" 
                         excludes="" />
            </batchtest>
        </junit>
        
        <!-- <delete dir="${js-test.dir}" includeemptydirs="true" failonerror="true" /> -->
    </target>
</project>
