<?xml version="1.0"?>
<project name="server">

    <!-- set APACHE_LOG_DIR environment variable for apache config files -->
    <property environment="env" />
    <condition property="apache.log.dir" value="${env.APACHE_LOG_DIR}">
        <isset property="env.APACHE_LOG_DIR"/>
    </condition>
    <property name="apache.log.dir" value="/opt/tt/log/outcomes" />

    <target name="set-apache-props">
        <exec executable="ls" failonerror="false" resultproperty="vm">
            <arg value="/etc/redhat-release"/>
        </exec>
        <if>
            <os family="mac"/>
            <then>
                <property name="apachectl" value="/usr/sbin/apachectl"/>
                <property name="conf" location="${apache.config.dir}/dev-local-httpd-mac.conf"/>
            </then>
            <elseif>
                <equals arg1="${vm}" arg2="0"/>
                <then>
                    <property name="apachectl" value="/usr/sbin/apachectl"/>
                    <property name="conf" location="${apache.config.dir}/dev-local-httpd.conf"/>
                </then>
            </elseif>
            <else>
                <echo>NOTE: the APACHE_LOG_DIR variable is not respected by Ubuntu!</echo>
                <echo>Apache error log and PID file will be in /opt/tt/log/outcomes,</echo>
                <echo>regardless of property or environment variable settings.</echo>
                <property name="apachectl" value="/usr/sbin/apache2ctl"/>
                <property name="conf" location="${apache.config.dir}/dev-local-httpd-ubuntu.conf"/>
            </else>
        </if>
    </target>

    <target name="set-apache-props-lb">
        <exec executable="which" failonerror="false" resultproperty="vm">
            <arg value="/usr/sbin/apachectl"/>
        </exec>
        <if>
            <equals arg1="${vm}" arg2="0"/>
            <then>
                <property name="apachectl" value="/usr/sbin/apachectl"/>
                <property name="conf" location="${apache.config.dir}/dev-local-lb-httpd.conf"/>
            </then>
            <else>
                <echo>NOTE: the APACHE_LOG_DIR variable is not respected by Ubuntu!</echo>
                <echo>Apache error log and PID file will be in /opt/tt/log/outcomes,</echo>
                <echo>regardless of property or environment variable settings.</echo>
                <property name="apachectl" value="/usr/sbin/apache2ctl"/>
                <property name="conf" location="${apache.config.dir}/dev-local-lb-httpd-ubuntu.conf"/>
            </else>
        </if>
    </target>

    <!--
       run apachectl with the given command, assuming that "apachectl" and "conf" properties
       were already set appropriately
    -->
    <macrodef name="apachectl" description="run apachectl with the appropriate config">
        <attribute name="command"/>
        <sequential>
            <exec executable="bash" failonerror="true">
                <env key="APACHE_LOG_DIR" file="${apache.log.dir}" />
                <env key="COMMON_APACHE_CONFIG_PATH" value="target/web-assets/unzip/wgspringmodule-web-common-web-assets/web/static/common" />
                <arg value="${apachectl}"/>
                <arg value="-f"/>
                <arg value="${conf}"/>
                <arg value="-k"/>
                <arg value="@{command}"/>
            </exec>
        </sequential>
    </macrodef>

    <target name="apache-start" depends="set-apache-props" description="Start apache">
        <apachectl command="start" />
    </target>

    <target name="apache-start-lb" depends="set-apache-props-lb" description="Start apache for the local load balancer">
        <apachectl command="start"/>
    </target>
    
    <target name="apache-stop" depends="set-apache-props" description="Stop apache">
        <apachectl command="stop" />
    </target>

    <target name="apache-stop-lb" depends="set-apache-props-lb" description="Stop apache">
        <apachectl command="stop" />
    </target>

    <target name="tomcat-clean" description="Delete all outdated war directories">
        <outofdate outputtargets="outdated.webapps" separator="${line.separator}">
            <sourcefiles>
                <fileset dir="${tomcat.webapp.dir}" >
                    <include name="*.war"/>
                </fileset>
            </sourcefiles>
            <mapper type="regexp" from="^(.*)\.war$$" to="\1"/>
            <deletetargets quiet="true" failonerror="true" />
        </outofdate>
        <echo>Deleted (or missing) webapp directories (if any):${line.separator}${outdated.webapps}</echo>
        <!-- tomcat working directory (can cause startup errors/warnings if stale) -->
        <delete dir="${tomcat.dir}/work" />
    </target>

    <macrodef name="run-catalina" description="runs catalina.sh with the supplied command {debug, debug -security, jpda start, run, run -security, start, start -security, stop, stop -force or version}">
        <attribute name="command" default="start"/>
        <sequential>
            <property name="tomcat.coverage.path" location="${coverage.data.file.webapp}" />
            <copy
                file="${coverage.data.file.base}"
                tofile="${tomcat.coverage.path}"
                overwrite="true"
                failonerror="false"
            />
            <exec executable="bash" failonerror="true">
                <arg value="${tomcat.dir}/bin/catalina.sh"/>
                <arg line="@{command}"/>
                <env key="JPDA_ADDRESS" value="${tomcat.jpda.address}"/>
                <env key="JAVA_OPTS" value="${tomcat.java.opts}"/>
                <env key="CATALINA_OPTS"
                     value="-Dnet.sourceforge.cobertura.datafile=${tomcat.coverage.path}"
                />
            </exec>
            <echo>Waiting for tomcat to start...</echo>
            <parallel threadCount="2" timeout="100000">
                <daemons>
                    <exec executable="tail" failonerror="false" timeout="100000">
                        <arg value="-f"/>
                        <arg value="${tomcat.dir}/logs/catalina.out"/>
                    </exec>
                </daemons>
                <waitfor maxwait="3" maxwaitunit="minute" checkevery="1" checkeveryunit="second">
                    <http url="http://localhost:8080/${servlet.name}/login"/>
                </waitfor>
            </parallel>
            <echo>...done!</echo>
        </sequential>
    </macrodef>

    <target name="tomcat-start" depends="tomcat-clean" description="Start tomcat">
        <run-catalina />
    </target>

    <target name="tomcat-debug-start" depends="tomcat-clean" description="Start tomcat with jpda option for debugging">
        <run-catalina command="jpda start"/>
    </target>
    
    <target name="tomcat-stop" description="Stop tomcat">
        <exec executable="bash" failonerror="true">
            <arg value="${tomcat.dir}/bin/catalina.sh"/>
            <arg value="stop"/>
        </exec>
    </target>

    <property name="keytool" value="keytool" /> <!-- set here to allow command-line overrides -->
    <macrodef name="run-keytool-import" description="run keytool -importcert with some arguments. You may need to set -Dkeytool=/path/to/keytool">
        <element name="keytool-import-args" implicit="true" optional="false" />
        <sequential>
            <exec executable="${keytool}">
                <arg value="-importcert"/>
                <keytool-import-args />
                <arg value="-keystore" />  <arg value="${java.ssl.truststore.shared}" />
                <arg value="-storepass" /> <arg value="trustme" />
                <arg value="-noprompt" />
            </exec>
        </sequential>
    </macrodef>

    <target name="import-cert" description="Import a certificate into the shared trust store.  You may need to set -Dkeytool=/path/to/keytool">
        <fail message="Please define both a 'certificate' and an 'alias' property on the command line">
             <condition>
                  <not>
                      <and>
                         <isset property="alias" />
                         <isset property="certificate" />
                      </and>
                  </not>
             </condition>
        </fail>
        <run-keytool-import>
            <arg value="-file" />      <arg value="${certificate}" />
            <arg value="-alias" />     <arg value="${alias}"/>
        </run-keytool-import>
    </target>

    <target name="delete-cert" description="Delete a certificate from the shared trust store.  You may need to set -Dkeytool=/path/to/keytool">
        <fail message="Please define the 'alias' property on the command line">
             <condition>
                  <not>
                      <isset property="alias" />
                  </not>
             </condition>
        </fail>
        <run-keytool-import>
            <arg value="-delete" />
            <arg value="-alias" />
            <arg value="${alias}"/>
        </run-keytool-import>
    </target>

    <target name="list-certs" description="List the currently installed certificates in the shared trust store.  You may need to set -Dkeytool=/path/to/keytool">
        <exec executable="${keytool}">
            <arg value="-list"/>
            <arg value="-keystore" />  <arg value="${java.ssl.truststore.shared}" />
            <arg value="-storepass" /> <arg value="trustme" />
        </exec>
    </target>
</project>
